module LFSR(
	input clk,
	input en,
	input [1:0] mode,
	input [31:0] seed,
	output reg [1:0] velocity,
	output reg [6:0] position,
	output reg [7:0] asciicode,
	output reg ready
);

reg [31:0] lfsr;

always @ (posedge clk)
begin
	if(en)
	begin
		lfsr = {seed[31:1], seed[31] ^~ seed[28]};
		velocity = lfsr[1:0];
		lfsr = {lfsr[31:1], lfsr[31] ^~ lfsr[28]};
		position = (lfsr[6:0] % 70);
		lfsr = {lfsr[31:1], lfsr[31] ^~ lfsr[28]};
		if(mode == 2'b00)
			asciicode = (lfsr[7:0] % 26) + 97;
		else
		begin
			if(lfsr[7]==1)
				asciicode = (lfsr[7:0] % 26) + 65;
			else
				asciicode = (lfsr[7:0] % 26) + 97;
		end
		ready = 1;
	end
	else
	begin
		velocity = 0;
		position = 0;
		asciicode = 0;
		ready = 0;
	end
end

endmodule
